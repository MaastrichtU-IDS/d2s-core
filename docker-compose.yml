version: "3"

services:

  graphdb:
    container_name: d2s-graphdb
    build:
      context: ./support/graphdb
      dockerfile: Dockerfile
      args:
        version: 9.1.1
    # build: ./support/graphdb
    # image: ontotext/graphdb:9.1.1-ee
    command: -Dgraphdb.home=/opt/graphdb/home -Dgraphdb.workbench.cors.enable=true
    # environment: 
    #   - GDB_HEAP_SIZE=20B
      # See http://graphdb.ontotext.com/documentation/standard/requirements.html
    volumes:
      - ../workspace/graphdb:/opt/graphdb/home
      - ../workspace/import:/root/graphdb-import
    ports:
      - 7200:7200
    networks:
      - network
    restart: unless-stopped

  # Access at http://localhost:7199
  graphdb-ee:
    container_name: d2s-graphdb-ee
    image: ontotext/graphdb:9.2.0-ee
    # build: ./support/graphdb
    # image: ontotext/graphdb:9.1.1-ee
    command: -Dgraphdb.home=/opt/graphdb/home -Dgraphdb.workbench.cors.enable=true
    volumes:
      - ../workspace/graphdb:/opt/graphdb/home
      - ../workspace/import:/root/graphdb-import
    ports:
      - 7199:7200
    networks:
      - network
    restart: unless-stopped

  virtuoso:
    container_name: d2s-virtuoso
    image: umids/d2s-virtuoso:latest
    # image: tenforce/virtuoso:1.3.2-virtuoso7.2.5.1
    volumes:
      - ../workspace/virtuoso:/data
    ports:
      - 8890:8890
      - 1111:1111
    environment:
      # http://vos.openlinksw.com/owiki/wiki/VOS/VirtRDFPerformanceTuning
      # http://docs.openlinksw.com/virtuoso/rdfperfgeneral/
      - DBA_PASSWORD=dba
      - SPARQL_UPDATE=true
      - DEFAULT_GRAPH=https://w3id.org/d2s/graph
      - VIRT_Parameters_DirsAllowed=., /usr/local/virtuoso-opensource/share/virtuoso/vad, /usr/local/virtuoso-opensource/var/lib/virtuoso/db
      - VIRT_SPARQL_ResultSetMaxRows=999999999999999999
      - VIRT_SPARQL_MaxQueryCostEstimationTime=0
      - VIRT_SPARQL_MaxQueryExecutionTime=14400
      - VIRT_VDB_VDBDisconnectTimeout=7200000
      - VIRT_Client_SQL_QUERY_TIMEOUT=14400000
      - VIRT_CLient_SQL_TXN_TIMEOUT=14400000
      - VIRT_Database_ErrorLogLevel=0 # default: 7 is maximum logs
      - VIRT_Parameters_Timeout=7200
      - VIRT_Parameters_TransactionAfterImageLimit=5000000000 # default is 50M
      - VIRT_Parameters_NumberOfBuffers=493674 # To use up to 4G of RAM according to documentation
      # Each buffer caches one 8K page of data and occupies approximately 8700 bytes of memory.
      # - VIRT_Parameters_NumberOfBuffers=680000 # For 16G systems according to Optimization docs, but cause freeze
      # - VIRT_Parameters_MaxDirtyBuffers=500000
      # - VIRT_Parameters_NumberOfBuffers=5450000 # For 64G systems
      # - VIRT_Parameters_MaxDirtyBuffers=4000000
      # - VIRT_Parameters_MaxCheckpointRemap=4000
      # - VIRT_Parameters_MaxClientConnections		= 10 # Better to reduce if a lot of big requests
      # - VIRT_SPARQL_DefaultQuery=select distinct ?Concept where {[] a ?Concept} LIMIT 100
      # - VIRT_VDB_VDBDisconnectTimeout=7200000
      # - VIRT_Client_SQL_QUERY_TIMEOUT=14400000
      # - VIRT_CLient_SQL_TXN_TIMEOUT=14400000
    networks:
      - network
    restart: unless-stopped

  tmp-virtuoso:
    container_name: d2s-tmp-virtuoso
    image: umids/d2s-virtuoso:latest
    # image: tenforce/virtuoso:1.3.2-virtuoso7.2.5.1
    volumes:
      - ../workspace/tmp-virtuoso:/data
    # ports:
    #   # - 8891:8890
    #   # - 1112:1111
    environment:
      - DBA_PASSWORD=dba
      - SPARQL_UPDATE=true
      - DEFAULT_GRAPH=https://w3id.org/d2s/graph
      - VIRT_Parameters_DirsAllowed=., /usr/local/virtuoso-opensource/share/virtuoso/vad, /usr/local/virtuoso-opensource/var/lib/virtuoso/db
      - VIRT_SPARQL_ResultSetMaxRows=999999999999999999
      - VIRT_SPARQL_MaxQueryCostEstimationTime=0
      - VIRT_SPARQL_MaxQueryExecutionTime=14400
      - VIRT_VDB_VDBDisconnectTimeout=7200000
      - VIRT_Client_SQL_QUERY_TIMEOUT=14400000
      - VIRT_CLient_SQL_TXN_TIMEOUT=14400000
      - VIRT_Database_ErrorLogLevel=0 # default: 7 is maximum logs
      - VIRT_Parameters_Timeout=7200
      - VIRT_Parameters_TransactionAfterImageLimit=5000000000 # default is 50M
      - VIRT_Parameters_NumberOfBuffers=493674 # To use up to 4G of RAM according to documentation
      # Each buffer caches one 8K page of data and occupies approximately 8700 bytes of memory.
      # - VIRT_Parameters_MaxDirtyBuffers=987348
      # - VIRT_Parameters_MaxCheckpointRemap=4000
    networks:
      - network
    restart: unless-stopped

  # http://localhost:8082/bigdata/#splash
  # https://hub.docker.com/r/lyrasis/blazegraph
  blazegraph:
    container_name: d2s-blazegraph
    image: lyrasis/blazegraph:2.1.5
    volumes:
      - ../workspace/blazegraph:/data
      # - ../workspace/RWStore.properties:/RWStore.properties
    ports:
      - 8082:8080
    networks:
      - network
    restart: unless-stopped
    # environment:
    #   # Work for Ubuntu ($UID=1000 and 1000 in $GROUPS)
    #   - BLAZEGRAPH_UID=${UID}
    #   - BLAZEGRAPH_GID=${GID}

  # http://localhost:10035
  # Default login: test / xyzzy
  allegrograph:
    container_name: d2s-allegrograph
    image: franzinc/agraph:v6.6.0
    ports:
      - 10000-10035:10000-10035
    shm_size: 1g
    # volumes:
    #   - ../workspace/allegrograph:/data
    networks:
      - network
    restart: unless-stopped

  # http://localhost:10035
  # Default login: test / xyzzy
  fuseki:
    container_name: d2s-fuseki
    image: stain/jena-fuseki:3.14.0
    environment: 
      - FUSEKI_DATASET_1=demo
      - ADMIN_PASSWORD=password 
      - JVM_ARGS=-Xmx2g # Default: 1200MiB
    ports:
      - 3030:3030
    volumes:
      - ../workspace/fuseki:/fuseki
      - ../workspace/import:/staging
    networks:
      - network
    restart: unless-stopped

  # http://localhost:8086
  # Default login: admin / Passw0rd1
  anzograph:
    container_name: d2s-anzograph
    image: cambridgesemantics/anzograph:2.0.2 
    ports:
      - 8086:8080
      # - 8443:8443
    # volumes:
    #   - ../workspace/anzograph:/opt/anzograph
    networks:
      - network
    restart: unless-stopped

  drill:
    container_name: d2s-drill
    image: umids/apache-drill:1.17.0
    # image: apache/drill:1.17.0
    # command: /bin/bash
    ports:
      - 8048:8047
    tty: true
    # environment: # Define this part in the deployment docker-compose.yml
    #   - DRILLBIT_MAX_PROC_MEM=8G
    #   - DRILL_HEAP=4G
    #   - DRILL_MAX_DIRECT_MEMORY=4G
    #   - DRILLBIT_CODE_CACHE_SIZE=1G
    volumes:
      - ../workspace/input:/data:ro
      # - ../workspace:/data:ro
    networks:
      - network
    restart: unless-stopped

  postgres:
    container_name: d2s-postgres
    image: postgres:10.4
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db
    ports: 
      - 5432:5432
    volumes:
      - ../workspace/input:/data
      - ../workspace/input/postgres/db:/var/lib/postgresql/data
      - ../workspace/input/postgres/init:/docker-entrypoint-initdb.d
      # .sql file in initdb are imported on startup
    networks:
      - network
    restart: unless-stopped

  pgadmin:
    container_name: d2s-pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=test@test.edu
      - PGADMIN_DEFAULT_PASSWORD=password
    ports: 
      - 5433:80
    networks:
      - network
    restart: unless-stopped

  comunica:
    container_name: d2s-comunica
    image: comunica/jquery-widget.js:latest
    # image: umids/comunica-sparql-widget:latest
    ports:
      - 8084:80
    volumes:
      - ../workspace/comunica-settings.json:/usr/share/nginx/html/queries.json
      - ../workspace/dumps/hdt:/data
      # - ../workspace/RWStore.properties:/RWStore.properties
    networks:
      - network
    restart: unless-stopped

  ldf-server:
    container_name: d2s-ldf-server
    image: umids/ldf-server:latest
    command: /tmp/config.json
    ports:
      - 8085:3000
    volumes:
      - ../workspace/hdt-archives:/data
      - ../workspace/ldfserver-config.json:/tmp/config.json
    networks:
      - network
    restart: unless-stopped

  api:
    container_name: d2s-api
    image: umids/d2s-api:latest
    environment: 
      - ENDPOINT=http://graphdb:7200/repositories/trek
    networks:
      - network
    restart: unless-stopped

  notebook:
    container_name: d2s-notebook
    image: umids/jupyterlab:latest
    ports: 
      - 8888:8888
    volumes:
      - ../datasets:/notebooks/datasets
      - ../workspace:/notebooks/workspace
    environment: 
      - PASSWORD=password
      # - GIT_URL=https://github.com/vemonet/translator-sparql-notebook
    networks:
      - network
    restart: unless-stopped

  # Default password: "password"
  spark-notebook:
    container_name: d2s-spark-notebook
    image: umids/spark-jupyterlab:latest
    command: start-notebook.sh  --NotebookApp.password='sha1:9316432938f9:93985dffbb854d31308dfe0602a51db947fb7d80'
    ports: 
      - 8889:8888
    volumes:
      - ../datasets:/home/jovyan/work/datasets
      - ../workspace:/home/jovyan/work/workspace
    environment: 
      - JUPYTER_ENABLE_LAB=yes
    networks:
      - network
    restart: unless-stopped

  # Web app on 8880, API on 7080
  biothings-studio:
    container_name: d2s-biothings-studio
    image: biothings/biothings-studio:0.2a
    ports: 
      - 8880:8080
      - 7080:7080
      - 8000:8000
      - 9000:9000
      - 7022:7022
      - 9200:9200
      - 27017:27017
    volumes:
      - ../workspace/biothings:/data
    networks:
      - network
    restart: unless-stopped

  # Password is "test" by default
  docket:
    container_name: d2s-docket
    image: umids/docket:latest
    command: start-notebook.sh  --NotebookApp.password='sha1:9316432938f9:93985dffbb854d31308dfe0602a51db947fb7d80'
    ports:
      - 8002:8888
    volumes:
      - ../workspace/docket:/data
    environment:
      DEBUG: 1
      PYTHONUNBUFFERED: 1
      PYTHONPATH: '/app'
      JUPYTER_ENABLE_LAB: 'yes'
    networks:
      - network
    restart: unless-stopped

  filebrowser:
    container_name: d2s-filebrowser
    image: umids/nginx-file-browser:latest
    ports:
      - 8081:80
    volumes:
      - ../workspace/dumps/rdf:/opt/www/files
    restart: unless-stopped

  into-the-graph:
    container_name: d2s-into-the-graph
    image: umids/into-the-graph:latest
    ports:
      - 8079:5000
    networks:
      - network
    restart: unless-stopped

  proxy:
    container_name: d2s-proxy
    image: jwilder/nginx-proxy:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    network_mode: "host"
    restart: unless-stopped

  rmlstreamer:
    container_name: d2s-rmlstreamer
    image: umids/flink-rmlstreamer:latest
    # image: flink:1.9.1-scala_2.11
    expose:
      - "6123"
    ports:
      - "8078:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=rmlstreamer
    volumes:
      - ../workspace:/mnt/workspace
      - ../datasets:/mnt/datasets
    networks:
      - network

  rmltask:
    container_name: d2s-rmltask
    image: umids/flink-rmlstreamer:latest
    expose:
      - "6121"
      - "6122"
    depends_on:
      - rmlstreamer
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=rmlstreamer
    volumes:
      - ../workspace:/mnt/workspace
      - ../datasets:/mnt/datasets
    networks:
      - network

  mapeathor:
    container_name: d2s-mapeathor
    image: oegdataintegration/mapeathor:1.0.0
    volumes:
      - ../datasets:/Mapeathor/data
      - ../workspace/mapeathor:/Mapeathor/result

  # At http://localhost:8090
  limes-server:
    container_name: d2s-limes-server
    image: dicegroup/limes:latest
    ports:
      - 8090:8080
    # command: java -jar limes.jar
    volumes:
      - ../workspace:/mnt/workspace
      - ../datasets:/mnt/datasets
    networks:
      - network
    
  nanobench:
    container_name: d2s-nanobench
    image: nanopub/nanobench:latest
    ports:
      - 37373:37373
    volumes:
      - ../workspace/.nanopub:/root/.nanopub
    environment:
      - NANOBENCH_API_INSTANCES=http://grlc.np.dumontierlab.com/api/local/local/ http://grlc.nanopubs.lod.labs.vu.nl/api/local/local/ http://130.60.24.146:7881/api/local/local/

  fairdatapoint:
    container_name: d2s-fairdatapoint
    image: fairdata/fairdatapoint:latest
    ports:
      - 8098:8080
    networks:
      - network

  # Access at http://localhost:7474
  # Login: neo4j / neo4j
  neo4j:
    container_name: d2s-neo4j
    image: neo4j
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - ../workspace/neo4j:/data
    networks:
      - network

  # Pull Data2Services images
  d2s-bash-exec:
    image: umids/d2s-bash-exec:latest

  d2s-sparql-operations:
    image: umids/d2s-sparql-operations:latest

  autor2rml:
    image: umids/autor2rml:latest

  r2rml:
    image: umids/r2rml:latest

  xml2rdf:
    image: umids/xml2rdf:dev
    # TODO: still need dev?

  rdf-upload:
    image: umids/rdf-upload:latest

  hdt-cpp:
    image: rdfhdt/hdt-cpp:latest


networks:
  network:
    driver: bridge
